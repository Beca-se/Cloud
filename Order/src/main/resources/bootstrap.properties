server.port=7001
# 这个应用的名字,相同名字的注入到Eureka Server中会构成集群
spring.application.name=Order
# ----------------- 安全配置 -------------------------
spring.security.user.name=admin
spring.security.user.password=password
# -----------------------Eureka Client配置 ----------
# 使用ip 做名字
eureka.instance.prefer-ip-address=true
# 这个应用的hostName
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.instance-id=OrderOne
# 想要高可用 hostname必须不一样,如果设置了eureka.instance.prefer-ip-address hostName会被强制设置为IP
eureka.instance.hostname=cloud.order.one
# 将这个应用注册到那个EurekaServer 多个Eureka Server 互相注册 应用名字相同 就构成了高可用Eureka Server
eureka.client.service-url.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@cloud.eureka.one:4001/eureka,http://${spring.security.user.name}:${spring.security.user.password}@cloud.eureka.one:4002/eureka
# 多久没有向注册中心发心跳就会被踢出
eureka.instance.lease-expiration-duration-in-seconds=90
# 多久向注册中心发送一次心跳信息
eureka.instance.lease-renewal-interval-in-seconds=15
# 多久拉取一次注册中心的注册信息
eureka.client.registry-fetch-interval-seconds=10
spring.profiles.active=dev
